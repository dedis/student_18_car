syntax = "proto2";

package skipchain;

// Skipchain should come from skipchain/proto.go, but the way the SkipBlockFix
// is embedded in SkipBlock is difficult to handle automatically in proto.awk.
// For this reason, this file is created manually.

option java_package = "ch.epfl.dedis.proto";
option java_outer_classname = "SkipchainProto";

import "onet.proto";

// GetSingleBlock asks for a single block.
message GetSingleBlock {
    required bytes id = 1;
}

// GetUpdateChain - the client sends the hash of the last known
// Skipblock and will get back a list of all necessary SkipBlocks
// to get to the latest.
message GetUpdateChain {
  // latest known id of a block.
	required bytes latestID = 1;
}

// GetUpdateChainReply - returns the shortest chain to the current SkipBlock,
// starting from the SkipBlock the client sent
message GetUpdateChainReply {
  // update is the shortest path from the requested block to the latest
  // block.
	repeated SkipBlock update = 1;
}

message SkipBlock {
    required int32 index = 1;
    required int32 height = 2;
    required int32 max_height = 3;
    required int32 base_height = 4;
    repeated bytes backlinks = 5;
    repeated bytes verifiers = 6;
    optional bytes parent = 7;
    required bytes genesis = 8;
    required bytes data = 9;
    required onet.Roster roster = 10;
    required bytes hash = 11;
    repeated ForwardLink forward = 12;
    repeated bytes children = 13;
    optional bytes payload = 14;
}

message ForwardLink {
    required bytes from = 1;
    required bytes to = 2;
    optional onet.Roster newRoster = 3;
    required ByzcoinSig signature = 4;
}

message ByzcoinSig {
    required bytes msg = 1;
    required bytes sig = 2;
}

message SchnorrSig {
    required bytes challenge = 1;
    required bytes response = 2;
}

message Exception {
    required int32 index = 1;
    required bytes commitment = 2;
}
